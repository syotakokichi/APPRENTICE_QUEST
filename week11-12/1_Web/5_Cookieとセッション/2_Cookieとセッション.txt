Cookie とセッション
HTTP がステートレスであることを考えると、ログイン状態を保持することができません。しかし現実のアプリケーションではログイン状態を保持できないと大変不便です。

そこでログイン状態を保持するために Cookie とセッションが使われます。以下について説明してください。

Cookie とセッションとはそれぞれ何か？
Cookie とセッションの違いは？
Cookie とセッションを利用してどのようにログイン状態を実現しているのか？

Cookieとは：
Cookieはウェブサイトがユーザーのコンピュータやデバイスに一時的に保存する小さなテキストファイルのことを指します。これにより、ウェブサイトはユーザーの設定、ログイン情報、その他のデータを記憶することができます。ブラウザが次回そのサイトにアクセスする際、そのCookieがサーバーに送信され、ユーザーが以前に訪れたという事実や、その時のユーザーの状態（ログイン状態、カート内の商品など）をサーバーが認識するのに役立ちます。

セッションとは：
セッションは特定のユーザーがウェブサイトにアクセスしてからログアウトするまでの一連の操作や状態を管理する仕組みのことです。サーバーサイドで管理され、通常は一意のセッションIDが各ユーザーに割り当てられ、このIDを用いてユーザーの行動や状態（ログイン状態、カート内の商品など）を追跡します。

Cookieとセッションの違い：
Cookieとセッションはどちらもユーザーの状態を保存するために使用されますが、保存場所とその生存期間に違いがあります。Cookieはクライアントサイド（ユーザーのブラウザ）でデータを保存します。そのため、ブラウザを閉じてもCookieのデータは保持され、有効期限が切れるかユーザーが削除しない限り存在し続けます。一方、セッションはサーバーサイドでデータを保存し、ブラウザを閉じるか、特定の期間操作がないとセッションは終了（タイムアウト）します。

ログイン状態の実現方法：
ログイン情報の保持は通常、セッションとCookieを組み合わせて行われます。ユーザーが初めてログインすると、サーバーはセッションを作成し、それに一意のセッションIDを割り当てます。このセッションIDは、Cookieとしてユーザーのブラウザに送り返され、ブラウザはそのCookieを保存します。ユーザーがその後ウェブサイトを閲覧すると、ブラウザはそのCookie（セッションIDを含む）をサーバーに送り返します。サーバーはセッションIDを認識し、それをキーにしてサーバー上のセッションデータ（ユーザーのログイン状態など）を参照します。これにより、ユーザーがログイン状態を維持できるようになります。