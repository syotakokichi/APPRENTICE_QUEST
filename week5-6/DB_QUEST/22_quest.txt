インデックスを設定できる
mysql -u syotakokichi -p
USE employees;

 Tables_in_employees  |
+----------------------+
| current_dept_emp     |
| departments          |
| dept_emp             |
| dept_emp_latest_date |
| dept_manager         |
| employees            |
| salaries             |
| titles               |
+----------------------+

1. インデックス設定前
employees データベースの employees テーブルに対して、誕生日が1961年8月3日のレコードを取得してください。その際に、EXPLAIN ANALYZE ステートメントを利用することで、実行時間を計測してください。
EXPLAIN ANALYZE SELECT * 
  FROM employees 
 WHERE birth_date = '1961-08-03';
実行時間は0.22 secでした。

2. インデックスの作成
employees データベースの employees テーブルの birth_date カラムにインデックスを作成してください。
CREATE INDEX birth_date_index ON employees (birth_date);

3. インデックスの確認
employees データベースの employees テーブルのインデックスを確認し、インデックスが作成されていることを確認してください。
SHOW INDEX FROM employees;

4. インデックスの効果の確認
1と同じクエリを実行してください。その際に、EXPLAIN ANALYZE ステートメントを利用することで、実行時間を計測し、実行が高速化されていることを確認してください。
EXPLAIN ANALYZE SELECT * 
  FROM employees 
 WHERE birth_date = '1961-08-03';
 実行時間は0.02 secでした。

5. インデックスの説明
インデックスを貼ることでクエリが高速化された理由をデータベース初心者にわかるように説明してください。
インデックスを貼ることで、データベースがデータを検索する際に、データを並べ替える必要がなくなるため、高速化される。

6. インデックスの削除
作成したインデックスを削除してください。
DROP INDEX birth_date_index ON employees;
実行時間は0.02 secになりました。

7. ベストプラクティス
インデックスは作成すればするほどよいというものではありません。必要な場合のみ作成することが重要です。
インデックス作成のベストプラクティスについて調べ、どのような方針でインデックスを貼ると良いかまとめてください。

インデックスを貼ると、データベースの容量が増えるため、データベースの容量を考慮してインデックスを貼る。